C51 COMPILER V8.10   I2C_HANDLER                                                           02/14/2008 08:52:54 PAGE 1   


C51 COMPILER V8.10, COMPILATION OF MODULE I2C_HANDLER
OBJECT MODULE PLACED IN .\I2C_handler.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\protocols\I2C_handler.c BROWSE DEFINE(FEB64) DEBUG OBJECTEXTEND PRINT(.\
                    -I2C_handler.lst) OBJECT(.\I2C_handler.obj)

line level    source

   1          /**********************************************************************************\
   2            Name:         I2C_handler.c
   3            Created by:   Brian Lee                                                    Jul/11/2007, recovered on Aug/24/2007
   4          
   5            Contents:     I2C Protocol for any MSCB application (need I2C_hander.h)
   6          
   7            Version:               Rev 1.1
   8          
   9            Requirement:  Need to have I2C_SDA and I2C_SCL defined in mscbemb.h
  10          
  11            Last updated: Aug/24/2007
  12                                          - Recovery
  13          
  14            $Id: $
  15          \**********************************************************************************/
  16          
  17          //Include files
  18          #include "../feb64/mscbemb.h"
  19          #include "I2C_handler.h"
  20          
  21          sbit I2C_SDA = MSCB_I2C_SDA;
  22          sbit I2C_SCL = MSCB_I2C_SCL;
  23          
  24          void I2C_Clear(void)
  25          {
  26   1              //Bus freeTime between Stop and Start condition
  27   1              I2C_SDA = 1;
  28   1              I2C_SCL = 1;
  29   1              delay_us(I2C_T_BUF); 
  30   1      }
  31          
  32          void I2C_Start(void)
  33          {
  34   1              //Bus freeTime between Stop and Start condition (Clearing function)
  35   1              I2C_Clear();
  36   1      
  37   1              //Start condition: I2C_SDA goes from HIGH to LOW while I2C_SCL is HIGH
  38   1              delay_us(I2C_SU_STA);
  39   1              I2C_SDA = 0;
  40   1              delay_us(I2C_HD_STA);
  41   1              I2C_SCL = 0;    
  42   1      }
  43          
  44          void I2C_Stop(void)
  45          {
  46   1              //Stop condition: I2C_SDA goes from LOW to HIGH while I2C_SCL is HIGH
  47   1              I2C_SCL = 1;
  48   1              delay_us(I2C_SU_STO);
  49   1              I2C_SDA = 1;
  50   1      }
  51          
  52          unsigned char I2C_WriteByte(unsigned char datByte, unsigned char flag)
  53          {
  54   1              char i = 0;
C51 COMPILER V8.10   I2C_HANDLER                                                           02/14/2008 08:52:54 PAGE 2   

  55   1              unsigned char toBeSent = 0;
  56   1      
  57   1              if(flag == I2C_WRITE_FLAG)
  58   1              {
  59   2                      toBeSent = (datByte << 1) & 0xFE;
  60   2              }
  61   1              else if(flag == I2C_READ_FLAG)
  62   1              {
  63   2                      toBeSent = (datByte << 1) | 0x01;
  64   2              }
  65   1              else
  66   1              {
  67   2                      toBeSent = datByte;
  68   2              }
  69   1              for(i = 7; i >= 0; i--)
  70   1              {
  71   2                      I2C_SDA = (toBeSent >> i) & 0x01;
  72   2                      delay_us(1); //SU;DAT
  73   2                      I2C_ClockOnce();
  74   2              }
  75   1      
  76   1              if(I2C_SDA == 1)
  77   1              {
  78   2                      I2C_ClockOnce();
  79   2                      return I2C_ACK;
  80   2              }
  81   1              else if(I2C_SDA == 0)
  82   1              {
  83   2                      I2C_ClockOnce();
  84   2                      return I2C_NACK;
  85   2              }
  86   1              else
  87   1              {
  88   2                      I2C_ClockOnce();
  89   2                      return I2C_WRITE_ERROR;
  90   2              }
  91   1      }
  92          
  93          unsigned char I2C_ReadByte(bit flag)
  94          {
  95   1              char i = 0;
  96   1              char dataRead = 0x00;
  97   1      
  98   1              for(i = 7; i >= 0; i--)
  99   1              {
 100   2                      dataRead |= ((unsigned char) I2C_SDA) << i;
 101   2                      I2C_ClockOnce();
 102   2              }
 103   1      
 104   1              //send ACK / NACK
 105   1              if(flag == AA)
 106   1              {
 107   2                      I2C_SDA = 0;
 108   2              }
 109   1              else if(flag == I2C_NACK)
 110   1              {
 111   2                      I2C_SDA = 1;
 112   2              }
 113   1              I2C_ClockOnce();
 114   1      
 115   1              return dataRead;
 116   1      }
C51 COMPILER V8.10   I2C_HANDLER                                                           02/14/2008 08:52:54 PAGE 3   

 117          
 118          void I2C_ClockOnce(void)
 119          {
 120   1              I2C_SCL = 1;
 121   1              delay_us(I2C_T_HIGH);
 122   1              I2C_SCL = 0;
 123   1              delay_us(I2C_T_LOW);    
 124   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    221    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
